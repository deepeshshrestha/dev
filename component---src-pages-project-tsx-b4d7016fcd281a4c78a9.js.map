{"version":3,"sources":["webpack:///./src/components/GithubProjectCard/index.tsx","webpack:///./src/pages/project.tsx"],"names":["GithubCardWrapper","styled","div","theme","colors","light","ProfileHeader","RepoTitle","a","AvailableLiveButton","PortfolioBody","RepoDescription","p","Stats","GithubStatsItem","GithubProjectCard","blob","className","href","url","name","homepageUrl","description","forkCount","xmlns","width","height","viewBox","fillRule","d","stargazers","totalCount","Grid","media","lessThan","Title","pageQuery","Portfolio","repository","data","github","viewer","repositories","nodes","map","record","index","key"],"mappings":"6LAIMA,G,UAAoBC,UAAOC,IAAV,2FAAGD,CAAH,gHAIX,mCAAGE,MAAiCC,OAAOC,MAAM,SAMvDC,EAAgBL,UAAOC,IAAV,uFAAGD,CAAH,+EAObM,EAAYN,UAAOO,EAAV,mFAAGP,CAAH,mHAUTQ,EAAsBR,UAAOO,EAAV,6FAAGP,CAAH,yPAiBnBS,EAAgBT,UAAOC,IAAV,uFAAGD,CAAH,sBAIbU,EAAkBV,UAAOW,EAAV,yFAAGX,CAAH,qBAIfY,EAAQZ,UAAOC,IAAV,+EAAGD,CAAH,4FASLa,EAAkBb,UAAOC,IAAV,yFAAGD,CAAH,oEAgFNc,EA7DV,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACH,kBAAChB,EAAD,CAAmBiB,UAAU,gBAC3B,kBAACX,EAAD,KACE,kBAACC,EAAD,CAAWW,KAAMF,EAAKG,KAAMH,EAAKI,MAEjC,oCACGJ,EAAKK,aACJ,kBAACZ,EAAD,CAAqBS,KAAMF,EAAKK,aAAhC,UAMN,kBAACX,EAAD,KACE,kBAACC,EAAD,KAAkBK,EAAKM,cAEzB,kBAACT,EAAD,KAIE,sCACKG,EAAKO,WACN,kBAACT,EAAD,KACE,yBACEU,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BACEC,SAAS,UACTC,EAAE,odAGN,kCAAQb,EAAKO,aAInB,sCACKP,EAAKc,WAAWC,YACjB,kBAACjB,EAAD,KACE,yBACEU,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BACEC,SAAS,UACTC,EAAE,uFAIN,kCAAQb,EAAKc,WAAWC,iB,qPClIpC,IAAMC,EAAO/B,UAAOC,IAAV,oEAAGD,CAAH,yHAMNgC,IAAMC,SAAS,QAAfD,CANM,KAONA,IAAMC,SAAS,SAAfD,CAPM,MAUJE,EAAQlC,UAAOC,IAAV,qEAAGD,CAAH,uGAyCEmC,GAFEC,UA9BG,SAAC,GAAa,IACxBC,EADwB,EAAXC,KACKC,OAAOC,OAAOC,aAAaC,MAEnD,OACE,oCAgBE,kBAACR,EAAD,qBACA,kBAACH,EAAD,KACGM,EAAWM,KAAI,SAACC,EAAQC,GAAT,OACd,kBAAC,EAAD,CAAmBC,IAAKD,EAAO9B,KAAM6B,UAStB","file":"component---src-pages-project-tsx-b4d7016fcd281a4c78a9.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { navigate } from \"gatsby\";\n\nconst GithubCardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border: ${({ theme }) => `1.5px solid ${theme.colors.light[400]}`};\n  margin: 10px;\n  padding: 20px;\n  min-height: 180px;\n`;\n\nconst ProfileHeader = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst RepoTitle = styled.a`\n  margin-top: 0;\n  margin-bottom: 15px;\n  color: #4078c0;\n  font-size: 1.2rem;\n  font-weight: bold;\n  display: block;\n  cursor: pointer;\n`;\n\nconst AvailableLiveButton = styled.a`\n  border-radius: 20px;\n  border: 1px solid var(--secondary);\n  display: inline-block;\n  cursor: pointer;\n  font-size: 14px;\n  width: 40px;\n  text-align: center;\n  background: var(--secondary);\n  color: var(--primary);\n  margin-bottom: 15px;\n  margin-left: 5px;\n  &:hover {\n    background: green;\n  }\n`;\n\nconst PortfolioBody = styled.div`\n  margin: 15px 0px;\n`;\n\nconst RepoDescription = styled.p`\n  font-size: 1rem;\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  bottom: 0;\n  left: 25;\n  margin-bottom: 25px;\n`;\n\nconst GithubStatsItem = styled.div`\n  margin-right: 20px;\n  text-align: left;\n  svg {\n    color: var(--secondary);\n  }\n`;\n\nexport const GithubProjectCard: React.FC<{\n  blob: {\n    url: string;\n    name: string;\n    description: string;\n    homepageUrl: string;\n    resourcePath: string;\n    forkCount: number;\n    stargazers: { totalCount: number };\n    owner: { __typename: string; login: string };\n  };\n}> = ({ blob }) => (\n  <GithubCardWrapper className=\"github-cards\">\n    <ProfileHeader>\n      <RepoTitle href={blob.url}>{blob.name}</RepoTitle>\n\n      <>\n        {blob.homepageUrl && (\n          <AvailableLiveButton href={blob.homepageUrl}>\n            LIVE\n          </AvailableLiveButton>\n        )}\n      </>\n    </ProfileHeader>\n    <PortfolioBody>\n      <RepoDescription>{blob.description}</RepoDescription>\n    </PortfolioBody>\n    <Stats>\n      {/* <GithubStatsItem>\n        <span style={{ color: \"#4C5E99\" }}>‚óè</span> lang\n      </GithubStatsItem> */}\n      <>\n        {!!blob.forkCount && (\n          <GithubStatsItem>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"10\"\n              height=\"16\"\n              viewBox=\"0 0 10 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"\n              />\n            </svg>\n            <span> {blob.forkCount}</span>\n          </GithubStatsItem>\n        )}\n      </>\n      <>\n        {!!blob.stargazers.totalCount && (\n          <GithubStatsItem>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"14\"\n              height=\"16\"\n              viewBox=\"0 0 14 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"\n              />\n            </svg>\n\n            <span> {blob.stargazers.totalCount}</span>\n          </GithubStatsItem>\n        )}\n      </>\n    </Stats>\n  </GithubCardWrapper>\n);\n\nexport default GithubProjectCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport media from \"styled-media-query\";\nimport { graphql } from \"gatsby\";\nimport GithubProjectCard from \"components/GithubProjectCard\";\nimport ViewProjectCard from \"components/ViewProjectCard\";\n\nconst Grid = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: 8fr;\n  gap: 1.6rem 0.8rem;\n  ${media.lessThan(\"large\")`grid-template-columns: repeat(2, 1fr);`}\n  ${media.lessThan(\"medium\")`grid-template-columns: repeat(1, 1fr);`}\n`;\n\nconst Title = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 32px;\n  line-height: 60px;\n  padding-top: 40px;\n  margin-bottom: 10px;\n`;\n\nconst Portfolio = ({ data }) => {\n  const repository = data.github.viewer.repositories.nodes;\n  // const nodes = data.allMdx.nodes;\n  return (\n    <>\n      {/* <Title>Projects</Title>\n      <Grid>\n        {nodes.map(({ id, frontmatter, fields, fileAbsolutePath }) => (\n          <>\n            {fileAbsolutePath.match(/(project)/) && (\n              <ViewProjectCard\n                key={id}\n                frontmatter={frontmatter}\n                fields={fields}\n              />\n            )}\n          </>\n        ))}\n      </Grid> */}\n\n      <Title> Open Source</Title>\n      <Grid>\n        {repository.map((record, index) => (\n          <GithubProjectCard key={index} blob={record} />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Portfolio;\n\nexport const pageQuery = graphql`\n  query {\n    github {\n      viewer {\n        repositories(\n          privacy: PUBLIC\n          affiliations: OWNER\n          first: 9\n          orderBy: { field: STARGAZERS, direction: DESC }\n        ) {\n          nodes {\n            url\n            name\n            description\n            homepageUrl\n            resourcePath\n            forkCount\n            stargazers {\n              totalCount\n            }\n            forkCount\n            owner {\n              login\n            }\n          }\n        }\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { published: { eq: true } }\n        fileAbsolutePath: { regex: \"/(project)|(idea)/\" }\n      }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          title\n          description\n        }\n        fields {\n          slug\n        }\n        fileAbsolutePath\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}