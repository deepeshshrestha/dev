{"version":3,"sources":["webpack:///./src/components/BlogFeedCard/index.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/Text/index.tsx"],"names":["Feed","styled","section","FeedTitle","Link","FeedMeta","div","FeedTime","time","FeedTags","tags","map","tag","index","comma","key","FeedCategoryLink","to","FeedDescription","p","BlogFeedCard","frontmatter","fields","title","description","date","slug","BlogWrapper","main","query","Blog","location","data","path","pathname","split","console","log","Layout","allMdx","nodes","id","AnimatedUnderlineText","span"],"mappings":"6NAKMA,EAAOC,IAAOC,QAAV,yEAAGD,CAAH,yBAIJE,EAAYF,YAAOG,KAAV,8EAAGH,CAAH,0GAYTI,EAAWJ,IAAOK,IAAV,6EAAGL,CAAH,0FAQRM,EAAWN,IAAOO,KAAV,6EAAGP,CAAH,MAERQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,oCACGA,EAAKC,KAAI,SAACC,EAAKC,GACd,IAAMC,EAAkB,IAAVD,EAAc,GAAK,IACjC,OACE,0BAAME,IAAKF,GACRC,EACD,kBAACE,EAAD,CAAkBC,GAAE,SAAWL,GAA/B,IAAwCA,SAO5CI,EAAmBf,YAAOG,KAAV,qFAAGH,CAAH,0DAQhBiB,EAAkBjB,IAAOkB,EAAV,oFAAGlB,CAAH,kEA0BNmB,EAnBmD,SAAC,GAG7D,IAFJC,EAEI,EAFJA,YACAC,EACI,EADJA,OAEQC,EAAmCF,EAAnCE,MAAOC,EAA4BH,EAA5BG,YAAaC,EAAeJ,EAAfI,KAAMf,EAASW,EAATX,KAClC,OACE,kBAACV,EAAD,KACE,kBAACG,EAAD,CAAWc,GAAIK,EAAOI,MACpB,kBAAC,IAAD,SAAyBH,IAE3B,kBAAClB,EAAD,KACE,kBAACE,EAAD,KAAWkB,GADb,KAEGf,GAAQ,kBAAC,EAAD,CAAUA,KAAMA,KAE3B,kBAACQ,EAAD,KAAkBM,KCpElBG,EAAc1B,IAAO2B,KAAV,wEAAG3B,CAAH,MAmBJ4B,GAFEC,UAfF,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAClBC,EAAOF,GAAYA,EAASG,UAAYH,EAASG,SAASC,MAAM,KAAK,GAG3E,OAFAC,QAAQC,IAAIL,GAGV,kBAACM,EAAA,EAAD,CAAQL,KAAMA,GACZ,kBAACN,EAAD,KACGK,EAAKO,OAAOC,MAAM7B,KAAI,gBAAG8B,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAApB,OACrB,kBAAC,EAAD,CAAcP,IAAK0B,EAAIpB,YAAaA,EAAaC,OAAQA,UAS9C,c,kCCzBrB,sCAEaoB,EAFb,UAEqCzC,EAAO0C,KAAV,8EAAG1C,CAAH","file":"component---src-pages-blog-tsx-d7894a2a69b964d59e6a.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport { AnimatedUnderlineText } from \"components/Text\";\n\nconst Feed = styled.section`\n  margin-bottom: 40px;\n`;\n\nconst FeedTitle = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  font-size: 30px;\n  font-weight: 450;\n  line-height: 28px;\n\n  &:hover {\n    color: gray;\n  }\n`;\n\nconst FeedMeta = styled.div`\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 28px;\n  text-decoration: none;\n  margin-top: 8px;\n`;\n\nconst FeedTime = styled.time``;\n\nconst FeedTags = ({ tags }) => (\n  <>\n    {tags.map((tag, index) => {\n      const comma = index === 0 ? \"\" : \",\";\n      return (\n        <span key={index}>\n          {comma}\n          <FeedCategoryLink to={`/tags/${tag}`}> {tag}</FeedCategoryLink>\n        </span>\n      );\n    })}\n  </>\n);\n\nconst FeedCategoryLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  &:hover {\n    color: gray;\n  }\n`;\n\nconst FeedDescription = styled.p`\n  font-size: 16px;\n  margin: 0;\n  margin-top: 5px;\n  margin-bottom: 19.5px;\n`;\n\nconst BlogFeedCard: React.FC<{ frontmatter: any; fields: any }> = ({\n  frontmatter,\n  fields,\n}) => {\n  const { title, description, date, tags } = frontmatter;\n  return (\n    <Feed>\n      <FeedTitle to={fields.slug}>\n        <AnimatedUnderlineText> {title}</AnimatedUnderlineText>\n      </FeedTitle>\n      <FeedMeta>\n        <FeedTime>{date}</FeedTime>__\n        {tags && <FeedTags tags={tags} />}\n      </FeedMeta>\n      <FeedDescription>{description}</FeedDescription>\n    </Feed>\n  );\n};\n\nexport default BlogFeedCard;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Layout from \"components/Layout\";\nimport BlogFeedCard from \"components/BlogFeedCard\";\n\nconst BlogWrapper = styled.main``;\n\nconst Blog = ({ location, data }) => {\n  const path = location && location.pathname && location.pathname.split(\"/\")[1];\n  console.log(data);\n\n  return (\n    <Layout path={path}>\n      <BlogWrapper>\n        {data.allMdx.nodes.map(({ id, frontmatter, fields }) => (\n          <BlogFeedCard key={id} frontmatter={frontmatter} fields={fields} />\n        ))}\n      </BlogWrapper>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const query = graphql`\n  query {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { published: { eq: true } }\n        fileAbsolutePath: { regex: \"/(blog)/\" }\n      }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          title\n          description\n          date(formatString: \"MMMM D, YYYY\")\n          tags\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const AnimatedUnderlineText = styled.span`\n  font-weight: 700;\n  text-align: center;\n  position: relative;\n  cursor: pointer;\n  &::before {\n    transition: 200ms ease-out;\n    border-bottom: 0.1rem solid #000;\n    content: \"\";\n    position: absolute;\n    width: 0%;\n    bottom: -0.125rem;\n  }\n  &:hover::before {\n    width: 100%;\n  }\n`;\n"],"sourceRoot":""}